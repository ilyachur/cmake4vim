Before:
    cd test_proj
    echo system("rm -rf cmake-build*")
    echo system("rm -rf compile_commands.json")

    let g:cmake_compile_commands_link=""
    let g:cmake_compile_commands=0
    let g:cmake_usr_args=""
    let g:cmake_cxx_compiler=""
    let g:cmake_c_compiler=""
    let g:cmake_build_type=""
    let g:cmake_install_prefix=""
    let g:cmake_project_generator=""
    let g:make_arguments=""
    let g:cmake_build_target="all"
    let g:cmake_build_dir=""
    let g:cmake_change_build_command=1
    let g:cmake_reload_after_save=0

After:
    echo system("rm -rf cmake-build*")
    echo system("rm -rf compile_commands.json")
    echo system("rm -rf build_test")
    cd ..

Execute (Change in cmake file shouldn't call project generation):
    Assert !isdirectory("cmake-build-release"), "Build directory shouldn't exist"
    :e CMakeLists.txt
    :w
    Assert !isdirectory("cmake-build-release"), "Build directory shouldn't exist"

Execute (Change in cmake file should call project generation):
    Assert !isdirectory("cmake-build-release"), "Build directory shouldn't exist"
    let g:cmake_reload_after_save=1
    :e CMakeLists.txt
    :w
    Assert filereadable("cmake-build-release/CMakeCache.txt"), "CMakeCache.txt should be generated"

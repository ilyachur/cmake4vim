name: CI

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  code_style:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Setup python modules
      uses: actions/setup-python@master
      with:
          python-version: 3.7
    - name: Install Vint
      run: |
          pip3 install vim-vint

    - name: Run code style check
      run: |
        vint .

  tests:
    name: '${{ matrix.vim_type  }} ${{ matrix.vim_version  }} on ${{ matrix.platform  }}'
    strategy:
      matrix:
        vim_type: ['Vim', 'Neovim']
        vim_version: ['nightly', 'stable']
        platform: ['Linux', 'MacOS', 'Windows']

        include:
          - platform: 'Linux'
            os: 'ubuntu-latest'
          - platform: 'MacOS'
            os: 'macos-latest'
          - platform: 'Windows'
            os: 'windows-latest'
          - vim_type: 'Vim'
            nvim: false
          - vim_type: 'Neovim'
            nvim: true

    runs-on: '${{ matrix.os  }}'
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v1
    - name: Setup python modules
      uses: actions/setup-python@master
      with:
          python-version: 3.7
    - name: Install covimerage
      run: |
          pip3 install covimerage
          pip3 install coveralls
    - uses: rhysd/action-setup-vim@v1
      with:
        neovim: ${{ matrix.nvim }}
        version: ${{ matrix.vim_version  }}
    - name: Setup Ninja
      uses: seanmiddleditch/gha-setup-ninja@master
    - name: Check Ninja
      run: |
          which ninja
          ninja --version
    - name: Clone Vader
      run: |
        git clone --depth 1 https://github.com/junegunn/vader.vim.git ${HOME}/.vim/plugged/vader.vim
    - name: Clone Dispatch
      run: |
        git clone --depth 1 https://github.com/tpope/vim-dispatch.git ${HOME}/.vim/plugged/vim-dispatch
  # Report:
  #   runs-on: ubuntu-latest
  #   needs: [Linux, Windows, MacOS]
  #
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: Download Linux profile
  #     uses: actions/download-artifact@v2
  #     with:
  #         name: lin_cov
  #   - name: Download MacOS profile
  #     uses: actions/download-artifact@v2
  #     with:
  #         name: mac_cov
  #   - name: Download Windows profile
  #     uses: actions/download-artifact@v2
  #     with:
  #         name: win_cov
  #   - name: Upload coverage to Codecov
  #     uses: codecov/codecov-action@v1
  #     with:
  #         token: ${{ secrets.CODECOV_TOKEN  }}
  #         files: ./win_cov.xml,./lin_cov.xml,./mac_cov.xml
  #         flags: tests
  #         name: cmake4vim_coverage
  #         fail_ci_if_error: true
